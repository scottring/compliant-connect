version: "3.8"
services:
  db:
    image: supabase/postgres:15.1.0.117
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_EXTENSIONS: uuid-ossp
    volumes:
      - ./supabase/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  studio:
    image: supabase/studio:latest
    restart: always
    ports:
      - "3000:3000"
    environment:
      STUDIO_PG_META_URL: http://meta:8080
      POSTGRES_PASSWORD: postgres
      DEFAULT_ORGANIZATION: Default Organization
      DEFAULT_PROJECT: Default Project
    depends_on:
      db:
        condition: service_healthy

  kong:
    image: kong:2.8.1
    restart: always
    ports:
      - "8000:8000"
      - "8443:8443"
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /var/lib/kong/kong.yml
      KONG_DNS_ORDER: LAST,A,CNAME
      KONG_PLUGINS: request-transformer,cors,key-auth,acl
    volumes:
      - ./kong.yml:/var/lib/kong/kong.yml:ro
    depends_on:
      db:
        condition: service_healthy

  auth:
    image: supabase/gotrue:v2.132.3
    restart: always
    ports:
      - "9999:9999"
    environment:
      GOTRUE_API_HOST: 0.0.0.0
      PORT: 9999
      DATABASE_URL: postgres://postgres:postgres@db:5432/postgres?sslmode=disable
      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_HOST: db
      GOTRUE_DB_PORT: 5432
      GOTRUE_DB_USER: postgres
      GOTRUE_DB_PASSWORD: postgres
      GOTRUE_DB_NAME: postgres
      GOTRUE_SITE_URL: http://localhost:8080
      GOTRUE_JWT_SECRET: ${JWT_SECRET}
      GOTRUE_JWT_EXP: 3600
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
      API_EXTERNAL_URL: http://localhost:8000
      GOTRUE_MAILER_AUTOCONFIRM: "true"
      GOTRUE_DISABLE_SIGNUP: "false"
      GOTRUE_SMTP_ADMIN_EMAIL: "admin@example.com"
      GOTRUE_SMTP_HOST: "supabase"
      GOTRUE_SMTP_PORT: "2500"
      GOTRUE_SMTP_USER: "fake"
      GOTRUE_SMTP_PASS: "fake"
      GOTRUE_SMTP_SENDER_NAME: "fake"
      GOTRUE_MAILER_URLPATHS_CONFIRMATION: "/auth/v1/verify"
      GOTRUE_MAILER_URLPATHS_INVITE: "/auth/v1/verify"
      GOTRUE_MAILER_URLPATHS_RECOVERY: "/auth/v1/verify"
      GOTRUE_MAILER_URLPATHS_EMAIL_CHANGE: "/auth/v1/verify"
      GOTRUE_SMTP_MAX_FREQUENCY: 0s
      GOTRUE_MAILER_SECURE_EMAIL_CHANGE_ENABLED: "false"
      GOTRUE_SECURITY_EMAIL_CONFIRMATION_REQUIRED: "false"
    depends_on:
      db:
        condition: service_healthy
      kong:
        condition: service_started

  rest:
    image: postgrest/postgrest:v11.2.0
    restart: always
    ports:
      - "3001:3000"
    environment:
      PGRST_DB_URI: postgres://postgres:postgres@db:5432/postgres
      PGRST_DB_SCHEMA: public,storage
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: ${JWT_SECRET}
      PGRST_DB_USE_LEGACY_GUCS: "false"
    depends_on:
      db:
        condition: service_healthy

  realtime:
    image: supabase/realtime:v2.25.50
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    environment:
      APP_NAME: realtime
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: postgres
      DB_SSL: "false"
      PORT: 4000
      JWT_SECRET: ${JWT_SECRET}
      HOSTNAME: localhost
      ENABLE_TAILSCALE: "false"
      ERL_AFLAGS: "-proto_dist inet_tcp"
      POSTGRES_PASSWORD: postgres
      ENABLE_IPV6: "false"
      DNS_NODES: ""
      SECRET_KEY_BASE: ${JWT_SECRET}
      SECURE_CHANNELS: "true"
    ports:
      - "4000:4000"

  storage:
    image: supabase/storage-api:v0.40.4
    restart: always
    ports:
      - "5001:5000"
    environment:
      ANON_KEY: ${SUPABASE_ANON_KEY}
      SERVICE_KEY: ${SUPABASE_SERVICE_ROLE_KEY}
      PROJECT_REF: default
      POSTGREST_URL: http://rest:3000
      PGRST_JWT_SECRET: ${JWT_SECRET}
      DATABASE_URL: postgres://postgres:postgres@db:5432/postgres
      TENANT_ID: stub
      REGION: stub
      GLOBAL_S3_BUCKET: stub
      FILE_SIZE_LIMIT: 52428800
      FILE_SIZE_LIMIT_WITH_URL: 52428800
      STORAGE_BACKEND: file
      FILE_STORAGE_BACKEND_PATH: /var/lib/storage
      ENABLE_IMAGE_TRANSFORMATION: "true"
      IMGPROXY_URL: http://imgproxy:8080
    volumes:
      - storage_data:/var/lib/storage
    depends_on:
      db:
        condition: service_healthy
      rest:
        condition: service_started

  functions:
    build:
      context: .
      dockerfile: Dockerfile.functions
    restart: unless-stopped
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - SUPABASE_URL=${VITE_SUPABASE_URL}
      - SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${VITE_SUPABASE_SERVICE_ROLE_KEY}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - SENDER_EMAIL=${SENDER_EMAIL}
    ports:
      - "9000:9000"
    depends_on:
      db:
        condition: service_healthy
      rest:
        condition: service_started

volumes:
  storage_data:
