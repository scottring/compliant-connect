name: Flyway Database Migrations

on:
  push:
    branches: [ main, staging ]
    paths:
      - 'migrations/**'
      - '.github/workflows/flyway-migrations.yml'
  pull_request:
    branches: [ main, staging ]
    paths:
      - 'migrations/**'
      - '.github/workflows/flyway-migrations.yml'
  workflow_dispatch:  # Allow manual triggering

jobs:
  migrate:
    name: Run Flyway Migrations
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      
      - name: Install Flyway CLI
        run: |
          wget -qO- https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/9.8.1/flyway-commandline-9.8.1-linux-x64.tar.gz | tar xvz
          sudo ln -s $(pwd)/flyway-9.8.1/flyway /usr/local/bin/flyway
      
      - name: Determine target environment
        id: env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "environment=production" >> $GITHUB_OUTPUT
            echo "db_url=${{ secrets.PROD_DB_URL }}" >> $GITHUB_OUTPUT
            echo "db_user=${{ secrets.PROD_DB_USER }}" >> $GITHUB_OUTPUT
            echo "db_password=${{ secrets.PROD_DB_PASSWORD }}" >> $GITHUB_OUTPUT
          else
            echo "environment=staging" >> $GITHUB_OUTPUT
            echo "db_url=jdbc:postgresql://db.fubuiiecraslloezxshs.supabase.co:5432/postgres" >> $GITHUB_OUTPUT
            echo "db_user=postgres" >> $GITHUB_OUTPUT
            echo "db_password=${{ secrets.STAGING_DB_PASSWORD }}" >> $GITHUB_OUTPUT
          fi
      
      - name: Validate Flyway Migrations
        if: github.event_name == 'pull_request'
        run: |
          echo "Validating migrations for ${{ steps.env.outputs.environment }} environment..."
          flyway validate \
            -url=${{ steps.env.outputs.db_url }} \
            -user=${{ steps.env.outputs.db_user }} \
            -password=${{ steps.env.outputs.db_password }} \
            -locations=filesystem:./migrations
      
      - name: Run Flyway Info (Dry Run)
        if: github.event_name == 'pull_request'
        run: |
          echo "Running Flyway info for ${{ steps.env.outputs.environment }} environment..."
          flyway info \
            -url=${{ steps.env.outputs.db_url }} \
            -user=${{ steps.env.outputs.db_user }} \
            -password=${{ steps.env.outputs.db_password }} \
            -locations=filesystem:./migrations
      
      - name: Run Flyway Migrations
        if: github.event_name != 'pull_request'
        run: |
          echo "Running migrations for ${{ steps.env.outputs.environment }} environment..."
          flyway migrate \
            -url=${{ steps.env.outputs.db_url }} \
            -user=${{ steps.env.outputs.db_user }} \
            -password=${{ steps.env.outputs.db_password }} \
            -locations=filesystem:./migrations \
            -baselineOnMigrate=true \
            -outOfOrder=true
      
      - name: Verify Migrations
        if: github.event_name != 'pull_request'
        run: |
          echo "Verifying migrations for ${{ steps.env.outputs.environment }} environment..."
          flyway info \
            -url=${{ steps.env.outputs.db_url }} \
            -user=${{ steps.env.outputs.db_user }} \
            -password=${{ steps.env.outputs.db_password }} \
            -locations=filesystem:./migrations